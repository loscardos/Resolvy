{
    "openapi": "3.0.0",
    "info": {
        "title": "Resolvy API Documentation",
        "description": "API documentation for the Resolvy helpdesk application",
        "contact": {
            "email": "admin@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Main API Server"
        }
    ],
    "paths": {
        "/api/v1/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get list of customers",
                "description": "Returns a paginated list of customers",
                "operationId": "getCustomersList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CustomerResource"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customers retrieved successfully."
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new customer and their initial subscription",
                "description": "Creates a new customer record along with their first subscription",
                "operationId": "storeCustomer",
                "requestBody": {
                    "description": "Customer and subscription data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCustomerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CustomerResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/customers/{id}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer information by ID",
                "description": "Returns customer data",
                "operationId": "getCustomerById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of customer to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CustomerResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update an existing customer and their subscription",
                "description": "Updates a customer record and their subscription",
                "operationId": "updateCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of customer to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Customer and subscription data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCustomerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Customer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CustomerResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete an existing customer",
                "description": "Deletes a customer record",
                "operationId": "deleteCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of customer to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/customers/by-code/{customer_code}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer information by Customer Code",
                "description": "Returns a single customer's data based on their unique customer code",
                "operationId": "getCustomerByCode",
                "parameters": [
                    {
                        "name": "customer_code",
                        "in": "path",
                        "description": "The unique code of the customer to return",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CustomerResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/enums": {
            "post": {
                "tags": [
                    "Utilities"
                ],
                "summary": "Get a list of selectable enum values for a module",
                "description": "Provides a generic way to fetch constant arrays (enums) from various models.",
                "operationId": "getEnums",
                "requestBody": {
                    "description": "Specify the module and type of enum to fetch",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "module",
                                    "type"
                                ],
                                "properties": {
                                    "module": {
                                        "description": "The name of the module",
                                        "type": "string",
                                        "enum": [
                                            "customer",
                                            "subscription",
                                            "ticket",
                                            "service_package"
                                        ],
                                        "example": "subscription"
                                    },
                                    "type": {
                                        "description": "The type of enum to fetch",
                                        "type": "string",
                                        "enum": [
                                            "status",
                                            "priority",
                                            "type",
                                            "is_active"
                                        ],
                                        "example": "status"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "description": "An object where keys are the enum values and values are the display labels.",
                                            "type": "object",
                                            "example": {
                                                "active": "Active",
                                                "paused": "Paused",
                                                "cancelled": "Cancelled",
                                                "expired": "Expired"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Enums retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested enum or module was not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get list of permissions",
                "description": "Returns a paginated list of all permissions",
                "operationId": "getPermissionsList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PermissionResource"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions retrieved successfully."
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create a new permission",
                "description": "Creates a new permission record",
                "operationId": "storePermission",
                "requestBody": {
                    "description": "Permission data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission information",
                "description": "Returns permission data",
                "operationId": "getPermissionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of permission to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Update an existing permission",
                "description": "Updates a permission record",
                "operationId": "updatePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of permission to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Permission data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Permission updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PermissionResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete an existing permission",
                "description": "Deletes a permission record",
                "operationId": "deletePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of permission to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of roles",
                "description": "Returns a paginated list of all roles with their permissions",
                "operationId": "getRolesList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RoleResource"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Roles retrieved successfully."
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create a new role",
                "description": "Creates a new role and assigns permissions",
                "operationId": "storeRole",
                "requestBody": {
                    "description": "Role data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role information",
                "description": "Returns role data with assigned permissions",
                "operationId": "getRoleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update an existing role",
                "description": "Updates a role record and its permissions",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Role data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete an existing role",
                "description": "Deletes a role record",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/service-packages": {
            "get": {
                "tags": [
                    "Service Packages"
                ],
                "summary": "Get list of service packages",
                "description": "Returns a paginated list of all service packages",
                "operationId": "getServicePackagesList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ServicePackageResource"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service packages retrieved successfully."
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Service Packages"
                ],
                "summary": "Create a new service package",
                "description": "Creates a new service package record",
                "operationId": "storeServicePackage",
                "requestBody": {
                    "description": "Service package data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreServicePackageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service package created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServicePackageResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service package created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/service-packages/{id}": {
            "get": {
                "tags": [
                    "Service Packages"
                ],
                "summary": "Get service package information",
                "description": "Returns service package data",
                "operationId": "getServicePackageById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of service package to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServicePackageResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service package retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Service Packages"
                ],
                "summary": "Update an existing service package",
                "description": "Updates a service package record",
                "operationId": "updateServicePackage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of service package to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Service package data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateServicePackageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Service package updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ServicePackageResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service package updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Service Packages"
                ],
                "summary": "Delete an existing service package",
                "description": "Deletes a service package record",
                "operationId": "deleteServicePackage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of service package to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service package deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service package deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/subscriptions": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get list of subscriptions",
                "description": "Returns a paginated list of subscriptions",
                "operationId": "getSubscriptionsList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubscriptionResource"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscriptions retrieved successfully."
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create a new subscription",
                "description": "Creates a new subscription record",
                "operationId": "storeSubscription",
                "requestBody": {
                    "description": "Subscription data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSubscriptionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subscription created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubscriptionResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/subscriptions/{id}": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get subscription information",
                "description": "Returns subscription data",
                "operationId": "getSubscriptionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of subscription to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubscriptionResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Update an existing subscription",
                "description": "Updates a subscription record",
                "operationId": "updateSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of subscription to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Subscription data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSubscriptionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Subscription updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubscriptionResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Delete an existing subscription",
                "description": "Deletes a subscription record",
                "operationId": "deleteSubscription",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of subscription to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subscription deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/ticket-categories": {
            "get": {
                "tags": [
                    "Ticket Categories"
                ],
                "summary": "Get list of ticket categories",
                "description": "Returns a paginated list of all ticket categories",
                "operationId": "getTicketCategoriesList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TicketCategoryResource"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket categories retrieved successfully."
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ticket Categories"
                ],
                "summary": "Create a new ticket category",
                "description": "Creates a new ticket category record",
                "operationId": "storeTicketCategory",
                "requestBody": {
                    "description": "Ticket category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTicketCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ticket category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketCategoryResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket category created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/ticket-categories/{id}": {
            "get": {
                "tags": [
                    "Ticket Categories"
                ],
                "summary": "Get ticket category information",
                "description": "Returns ticket category data",
                "operationId": "getTicketCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of ticket category to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketCategoryResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket category retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Ticket Categories"
                ],
                "summary": "Update an existing ticket category",
                "description": "Updates a ticket category record",
                "operationId": "updateTicketCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of ticket category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ticket category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTicketCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Ticket category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketCategoryResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket category updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ticket Categories"
                ],
                "summary": "Delete an existing ticket category",
                "description": "Deletes a ticket category record",
                "operationId": "deleteTicketCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of ticket category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket category deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tickets": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get list of tickets",
                "description": "Returns a paginated list of tickets",
                "operationId": "getTicketsList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TicketResource"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tickets retrieved successfully."
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Create a new ticket",
                "description": "Creates a new ticket record",
                "operationId": "storeTicket",
                "requestBody": {
                    "description": "Ticket data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTicketRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ticket created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tickets/{id}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get ticket information",
                "description": "Returns ticket data",
                "operationId": "getTicketById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of ticket to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Update an existing ticket",
                "description": "Updates a ticket record",
                "operationId": "updateTicket",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of ticket to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ticket data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTicketRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Ticket updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Delete an existing ticket",
                "description": "Deletes a ticket record",
                "operationId": "deleteTicket",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of ticket to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tickets/{id}/status": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Update a ticket's status",
                "operationId": "updateTicketStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTicketStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status updated successfully"
                    },
                    "422": {
                        "description": "Status update failed due to validation or workflow rule violation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tickets/{id}/assignments": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Update a ticket's assigned users",
                "operationId": "updateTicketAssignments",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTicketAssignmentsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Assignments updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserResource"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Assignments updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns a paginated list of users with their roles",
                "operationId": "getUsersList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserResourceWithRoles"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully."
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user and assigns roles",
                "operationId": "storeUser",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResourceWithRoles"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data with assigned roles",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResourceWithRoles"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "description": "Updates a user record and their roles",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResourceWithRoles"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete an existing user",
                "description": "Deletes a user record",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and get API token",
                "operationId": "28874df82fb3742162ac235b8044d607",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@admin.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "1|aBcDeFgHiJkLmNoPqRsTuVwXyZ123456"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid login details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StoreCustomerRequest": {
                "title": "Store Customer and Subscription Request",
                "required": [
                    "name",
                    "type",
                    "contact_phone",
                    "status",
                    "package_id",
                    "start_date",
                    "end_date",
                    "subscription_status"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "individual",
                            "business"
                        ],
                        "example": "individual"
                    },
                    "contact_email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com",
                        "nullable": true
                    },
                    "contact_phone": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "suspended",
                            "cancelled"
                        ],
                        "example": "active"
                    },
                    "package_id": {
                        "description": "ID of the service package for the subscription",
                        "type": "integer",
                        "example": 1
                    },
                    "start_date": {
                        "description": "Subscription start date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-10-14"
                    },
                    "end_date": {
                        "description": "Subscription end date",
                        "type": "string",
                        "format": "date",
                        "example": "2026-10-14"
                    },
                    "subscription_status": {
                        "description": "Status for the new subscription",
                        "type": "string",
                        "enum": [
                            "active",
                            "paused",
                            "cancelled",
                            "expired"
                        ],
                        "example": "active"
                    },
                    "notes": {
                        "description": "Notes for the subscription",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateCustomerRequest": {
                "title": "Update Customer and Subscription Request",
                "required": [
                    "name",
                    "type",
                    "contact_phone",
                    "status",
                    "package_id",
                    "start_date",
                    "end_date",
                    "subscription_status"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "individual",
                            "business"
                        ],
                        "example": "individual"
                    },
                    "contact_email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com",
                        "nullable": true
                    },
                    "contact_phone": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "suspended",
                            "cancelled"
                        ],
                        "example": "active"
                    },
                    "package_id": {
                        "description": "ID of the service package for the subscription",
                        "type": "integer",
                        "example": 1
                    },
                    "start_date": {
                        "description": "Subscription start date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-10-14"
                    },
                    "end_date": {
                        "description": "Subscription end date",
                        "type": "string",
                        "format": "date",
                        "example": "2026-10-14"
                    },
                    "subscription_status": {
                        "description": "Status for the subscription",
                        "type": "string",
                        "enum": [
                            "active",
                            "paused",
                            "cancelled",
                            "expired"
                        ],
                        "example": "active"
                    },
                    "notes": {
                        "description": "Notes for the subscription",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CustomerResource": {
                "title": "Customer Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "customer_code": {
                        "type": "string",
                        "readOnly": true,
                        "example": "CUS-0000000001"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "type": {
                        "type": "string",
                        "example": "individual"
                    },
                    "contact_email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "contact_phone": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "title": "Pagination Meta",
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 10
                    },
                    "path": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/customers"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 150
                    }
                },
                "type": "object"
            },
            "PaginationLinks": {
                "title": "Pagination Links",
                "properties": {
                    "first": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/customers?page=1"
                    },
                    "last": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/customers?page=10"
                    },
                    "prev": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "next": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/customers?page=2"
                    }
                },
                "type": "object"
            },
            "StorePermissionRequest": {
                "title": "Store Permission Request",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "The title of the permission",
                        "type": "string",
                        "example": "user_management_access"
                    }
                },
                "type": "object"
            },
            "UpdatePermissionRequest": {
                "title": "Update Permission Request",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "The title of the permission",
                        "type": "string",
                        "example": "user_management_edit"
                    }
                },
                "type": "object"
            },
            "PermissionResource": {
                "title": "Permission Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "user_management_access"
                    }
                },
                "type": "object"
            },
            "StoreRoleRequest": {
                "title": "Store Role Request",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "The title of the role",
                        "type": "string",
                        "example": "Manager"
                    },
                    "permissions": {
                        "description": "An array of permission IDs to assign to the role",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                },
                "type": "object"
            },
            "UpdateRoleRequest": {
                "title": "Update Role Request",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "The title of the role",
                        "type": "string",
                        "example": "Senior Manager"
                    },
                    "permissions": {
                        "description": "An array of permission IDs to assign to the role",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "title": "Role Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Administrator"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionResource"
                        }
                    }
                },
                "type": "object"
            },
            "StoreServicePackageRequest": {
                "title": "Store Service Package Request",
                "required": [
                    "name",
                    "price"
                ],
                "properties": {
                    "name": {
                        "description": "The name of the service package",
                        "type": "string",
                        "example": "Gold Tier Support"
                    },
                    "description": {
                        "description": "A description of the package",
                        "type": "string",
                        "example": "24/7 phone and email support"
                    },
                    "price": {
                        "description": "The price of the package",
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    }
                },
                "type": "object"
            },
            "UpdateServicePackageRequest": {
                "title": "Update Service Package Request",
                "properties": {
                    "name": {
                        "description": "The name of the service package",
                        "type": "string",
                        "example": "Platinum Tier Support"
                    },
                    "description": {
                        "description": "A description of the package",
                        "type": "string",
                        "example": "Dedicated support agent and 24/7 phone support"
                    },
                    "price": {
                        "description": "The price of the package",
                        "type": "number",
                        "format": "float",
                        "example": 199.99
                    }
                },
                "type": "object"
            },
            "ServicePackageResource": {
                "title": "Service Package Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Gold Tier Support"
                    },
                    "description": {
                        "type": "string",
                        "example": "24/7 phone and email support"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    }
                },
                "type": "object"
            },
            "StoreSubscriptionRequest": {
                "title": "Store Subscription Request",
                "required": [
                    "customer_id",
                    "package_id",
                    "start_date",
                    "end_date",
                    "status"
                ],
                "properties": {
                    "customer_id": {
                        "description": "ID of the customer",
                        "type": "integer",
                        "example": 1
                    },
                    "package_id": {
                        "description": "ID of the service package",
                        "type": "integer",
                        "example": 1
                    },
                    "start_date": {
                        "description": "Subscription start date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-10-14"
                    },
                    "end_date": {
                        "description": "Subscription end date",
                        "type": "string",
                        "format": "date",
                        "example": "2026-10-14"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "paused",
                            "cancelled",
                            "expired"
                        ],
                        "example": "active"
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "example": "Initial setup complete."
                    }
                },
                "type": "object"
            },
            "UpdateSubscriptionRequest": {
                "title": "Update Subscription Request",
                "properties": {
                    "customer_id": {
                        "description": "ID of the customer",
                        "type": "integer",
                        "example": 1
                    },
                    "package_id": {
                        "description": "ID of the service package",
                        "type": "integer",
                        "example": 1
                    },
                    "start_date": {
                        "description": "Subscription start date",
                        "type": "string",
                        "format": "date",
                        "example": "2025-10-14"
                    },
                    "end_date": {
                        "description": "Subscription end date",
                        "type": "string",
                        "format": "date",
                        "example": "2026-10-14"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "paused",
                            "cancelled",
                            "expired"
                        ],
                        "example": "active"
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "example": "Customer requested a pause."
                    }
                },
                "type": "object"
            },
            "SubscriptionResource": {
                "title": "Subscription Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-10-14"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2026-10-14"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Initial setup complete."
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerResource"
                    },
                    "package": {
                        "$ref": "#/components/schemas/ServicePackageResource"
                    }
                },
                "type": "object"
            },
            "StoreTicketCategoryRequest": {
                "title": "Store Ticket Category Request",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "The name of the ticket category",
                        "type": "string",
                        "example": "Technical Support"
                    }
                },
                "type": "object"
            },
            "UpdateTicketCategoryRequest": {
                "title": "Update Ticket Category Request",
                "properties": {
                    "name": {
                        "description": "The name of the ticket category",
                        "type": "string",
                        "example": "Billing Inquiry"
                    }
                },
                "type": "object"
            },
            "TicketCategoryResource": {
                "title": "Ticket Category Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Technical Support"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    }
                },
                "type": "object"
            },
            "StoreTicketRequest": {
                "title": "Store Ticket Request",
                "required": [
                    "subject",
                    "customer_id",
                    "priority"
                ],
                "properties": {
                    "subject": {
                        "description": "The subject of the ticket",
                        "type": "string",
                        "example": "Cannot connect to the server"
                    },
                    "description": {
                        "description": "Detailed description of the issue",
                        "type": "string",
                        "example": "When I try to log in, I get a connection error message."
                    },
                    "customer_id": {
                        "description": "ID of the customer reporting the issue",
                        "type": "integer",
                        "example": 1
                    },
                    "ticket_category_id": {
                        "description": "ID of the ticket category",
                        "type": "integer",
                        "example": 1
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "medium"
                    },
                    "assigned_tos": {
                        "description": "An array of user IDs to assign to the ticket",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                },
                "type": "object"
            },
            "UpdateTicketRequest": {
                "title": "Update Ticket Request",
                "properties": {
                    "subject": {
                        "description": "The subject of the ticket",
                        "type": "string",
                        "example": "Cannot connect to the server"
                    },
                    "description": {
                        "description": "Detailed description of the issue",
                        "type": "string",
                        "example": "When I try to log in, I get a connection error message."
                    },
                    "customer_id": {
                        "description": "ID of the customer reporting the issue",
                        "type": "integer",
                        "example": 1
                    },
                    "ticket_category_id": {
                        "description": "ID of the ticket category",
                        "type": "integer",
                        "example": 1
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "medium"
                    },
                    "assigned_tos": {
                        "description": "An array of user IDs to assign to the ticket",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                },
                "type": "object"
            },
            "UpdateTicketStatusRequest": {
                "title": "Update Ticket Status Request",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "open",
                            "in_progress",
                            "resolved",
                            "closed"
                        ],
                        "example": "in_progress"
                    }
                },
                "type": "object"
            },
            "UpdateTicketAssignmentsRequest": {
                "title": "Update Ticket Assignments Request",
                "required": [
                    "assigned_tos"
                ],
                "properties": {
                    "assigned_tos": {
                        "description": "An array of user IDs to assign. Send an empty array to unassign all.",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                },
                "type": "object"
            },
            "TicketResource": {
                "title": "Ticket Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "ticket_no": {
                        "type": "string",
                        "readOnly": true,
                        "example": "SUP-0000000001"
                    },
                    "subject": {
                        "type": "string",
                        "example": "Cannot connect to the server"
                    },
                    "description": {
                        "type": "string",
                        "example": "When I try to log in..."
                    },
                    "status": {
                        "type": "string",
                        "example": "open"
                    },
                    "priority": {
                        "type": "string",
                        "example": "medium"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerResource"
                    },
                    "subscription": {
                        "$ref": "#/components/schemas/SubscriptionResource"
                    },
                    "ticket_category": {
                        "$ref": "#/components/schemas/TicketCategoryResource"
                    },
                    "assigned_tos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResource"
                        }
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store User Request",
                "required": [
                    "name",
                    "email",
                    "password",
                    "roles"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Jane Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "jane.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    },
                    "approved": {
                        "type": "boolean",
                        "example": true
                    },
                    "roles": {
                        "description": "An array of role IDs to assign to the user",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update User Request",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Jane Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "jane.doe@example.com"
                    },
                    "password": {
                        "description": "Provide a new password to change it",
                        "type": "string",
                        "format": "password",
                        "example": "new_password"
                    },
                    "approved": {
                        "type": "boolean",
                        "example": true
                    },
                    "roles": {
                        "description": "An array of role IDs to assign to the user",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                },
                "type": "object"
            },
            "UserResourceWithRoles": {
                "title": "User Resource with Roles",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Jane Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "jane.doe@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-10-14T10:00:00.000000Z"
                    },
                    "approved": {
                        "type": "boolean",
                        "example": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleResource"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Customers",
            "description": "API Endpoints for Customers"
        },
        {
            "name": "Permissions",
            "description": "API Endpoints for Permissions"
        },
        {
            "name": "Roles",
            "description": "API Endpoints for Roles"
        },
        {
            "name": "Service Packages",
            "description": "API Endpoints for Service Packages"
        },
        {
            "name": "Subscriptions",
            "description": "API Endpoints for Subscriptions"
        },
        {
            "name": "Ticket Categories",
            "description": "API Endpoints for Ticket Categories"
        },
        {
            "name": "Tickets",
            "description": "API Endpoints for Tickets"
        },
        {
            "name": "Users",
            "description": "API Endpoints for User Management"
        },
        {
            "name": "Utilities",
            "description": "General utility endpoints"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}